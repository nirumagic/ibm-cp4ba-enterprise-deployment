- name: Add DB2 users
  ansible.builtin.include_role:
    name: common
    tasks_from: add-db2-user
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_db2_user: "{{ item }}"
    common_db2_password: "{{ cp4ba_db2_universal_password }}"
  with_items:
    - base
    - devos1

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: BASE DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      db2 CONNECT TO CP4BA;
      db2 CREATE REGULAR TABLESPACE BASE_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;
      db2 CREATE USER TEMPORARY TABLESPACE BASE_TEMP_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;
      db2 CREATE SYSTEM TEMPORARY TABLESPACE BASE_SYSTMP_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;

      db2 GRANT DBADM ON DATABASE TO user base;
      db2 GRANT USE OF TABLESPACE BASE_TS TO user base;
      db2 GRANT USE OF TABLESPACE BASE_TEMP_TS TO user base;
      db2 CONNECT RESET;
      "
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: TENANT1 DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      db2 create database TENANT1 automatic storage YES USING CODESET UTF-8 TERRITORY DEFAULT COLLATE USING SYSTEM PAGESIZE 32768;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT1 USING LOGFILSIZ 7500;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT1 USING LOGPRIMARY 15;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT1 USING APPLHEAPSZ 2560;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT1 USING STMTHEAP 8192;
      db2 CONNECT TO TENANT1;
      db2 DROP TABLESPACE USERSPACE1;
      db2 CREATE Bufferpool TENANT1BP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE Bufferpool TENANT1TEMPBP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE Bufferpool TENANT1SYSBP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE LARGE TABLESPACE TENANT1DATA PAGESIZE 32K BUFFERPOOL TENANT1BP;
      db2 CREATE USER TEMPORARY TABLESPACE USERTEMP1 PAGESIZE 32K BUFFERPOOL TENANT1TEMPBP;
      db2 CREATE SYSTEM TEMPORARY TABLESPACE TEMPSYS1 PAGESIZE 32K BUFFERPOOL TENANT1SYSBP;
      db2 GRANT CONNECT,DATAACCESS,CREATETAB ON DATABASE TO USER db2inst1;
      db2 GRANT USE OF TABLESPACE TENANT1DATA TO user db2inst1;
      db2 GRANT USE OF TABLESPACE USERTEMP1 TO user db2inst1;
      db2 CONNECT RESET;
      db2 activate db TENANT1;
      "
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stdout is not search('.*The database alias \"TENANT1\" already exists.*')

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: TENANT2 DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      db2 create database TENANT2 automatic storage YES USING CODESET UTF-8 TERRITORY DEFAULT COLLATE USING SYSTEM PAGESIZE 32768;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT2 USING LOGFILSIZ 7500;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT2 USING LOGPRIMARY 15;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT2 USING APPLHEAPSZ 2560;
      db2 UPDATE DATABASE CONFIGURATION FOR TENANT2 USING STMTHEAP 8192;
      db2 CONNECT TO TENANT2;
      db2 DROP TABLESPACE USERSPACE1;
      db2 CREATE Bufferpool TENANT2BP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE Bufferpool TENANT2TEMPBP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE Bufferpool TENANT2SYSBP IMMEDIATE SIZE -1 PAGESIZE 32K;
      db2 CREATE LARGE TABLESPACE TENANT2DATA PAGESIZE 32K BUFFERPOOL TENANT2BP;
      db2 CREATE USER TEMPORARY TABLESPACE USERTEMP1 PAGESIZE 32K BUFFERPOOL TENANT2TEMPBP;
      db2 CREATE SYSTEM TEMPORARY TABLESPACE TEMPSYS1 PAGESIZE 32K BUFFERPOOL TENANT2SYSBP;
      db2 GRANT CONNECT,DATAACCESS,CREATETAB ON DATABASE TO USER db2inst1;
      db2 GRANT USE OF TABLESPACE TENANT2DATA TO user db2inst1;
      db2 GRANT USE OF TABLESPACE USERTEMP1 TO user db2inst1;
      db2 CONNECT RESET;
      db2 activate db TENANT2;
      "
  register: command_status
  failed_when: command_status.rc != 0 and command_status.stdout is not search('.*The database alias \"TENANT2\" already exists.*')

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
# DEVOS Based on https://www.ibm.com/docs/en/filenet-p8-platform/5.5.x?topic=vtdluwiifp-creating-db2-database-table-spaces-content-platform-engine-object-store
- name: DEVOS1 DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      db2 CONNECT TO CP4BA;
      db2 CREATE LARGE TABLESPACE DEVOS1_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;
      db2 CREATE USER TEMPORARY TABLESPACE DEVOS1_TEMP_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;
      db2 CREATE SYSTEM TEMPORARY TABLESPACE DEVOS1_SYSTMP_TS PAGESIZE 32 K MANAGED BY AUTOMATIC STORAGE BUFFERPOOL CP4BA_BP_32K;

      db2 GRANT DBADM ON DATABASE TO user devos1;
      db2 GRANT USE OF TABLESPACE DEVOS1_TS TO user devos1;
      db2 GRANT USE OF TABLESPACE DEVOS1_TEMP_TS TO user devos1;
      db2 CONNECT RESET;
      "
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP copy DB init files
  kubernetes.core.k8s_cp:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    container: db2u
    remote_path: /tmp/_adp_tmp_DB2
    local_path: "{{ cp4ba_output_directory }}/cert-kubernetes/ACA/configuration-ha/DB2"
    no_preserve: true
    state: to_pod

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP cleanup db2inst1 folder
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      rm -rf sqllib/_adp_tmp
      "
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP create db2inst1 folder
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      mkdir -p sqllib/_adp_tmp
      "
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP move files to be accessible by db2inst1 user
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: |
      sudo mv -f /tmp/_adp_tmp_DB2 /mnt/blumeta0/home/db2inst1/sqllib/_adp_tmp/DB2
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP set DB init files ownership
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: |
      sudo chown -R db2inst1:db2iadm1 /mnt/blumeta0/home/db2inst1/sqllib/_adp_tmp/DB2
  register: command_status

# Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=processing-preparing-db2-databases-document
- name: ADP make init scripts executable
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c "
      cd sqllib/_adp_tmp/DB2;
      chmod +x InitBaseDB.sh;
      chmod +x InitTenantDB.sh;
      "
  register: command_status

- name: ADP init Base DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c '
      cd sqllib/_adp_tmp/DB2;
      echo -e "CP4BA\n
      base\n
      y" | ./InitBaseDB.sh;
      '
  register: command_status

- name: ADP init Tenant1 DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c '
      cd sqllib/_adp_tmp/DB2;
      echo -e "TENANT1\n
      TENANT1\n
      TENANT1\n
      No\n
      db2inst1\n
      {{ cp4ba_db2_universal_password }}\n
      {{ cp4ba_db2_universal_password }}\n
      default\n
      CP4BA\n
      base\n
      y" | ./InitTenantDB.sh;
      '
  register: command_status

- name: ADP init Tenant2 DB
  kubernetes.core.k8s_exec:
    api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    host: "{{ cp4ba_k8s_host | default(omit) }}"
    namespace: db2
    pod: c-db2ucluster-db2u-0
    command: >
      su - db2inst1 -s /usr/bin/bash -c '
      cd sqllib/_adp_tmp/DB2;
      echo -e "TENANT2\n
      TENANT2\n
      TENANT2\n
      No\n
      db2inst1\n
      {{ cp4ba_db2_universal_password }}\n
      {{ cp4ba_db2_universal_password }}\n
      default\n
      CP4BA\n
      base\n
      y" | ./InitTenantDB.sh;
      '
  register: command_status

- name: Add DB connections to DB2MC
  ansible.builtin.include_role:
    name: common
    tasks_from: add-db2mc-connection
  vars:
    common_k8s_api_key: "{{ cp4ba_k8s_api_key | default(omit) }}"
    common_k8s_host: "{{ cp4ba_k8s_host | default(omit) }}"
    common_db2_db_name: "{{ item }}"
    common_user: "{{ cp4ba_db2mc_admin_user }}"
    common_password: "{{ cp4ba_db2mc_universal_password }}"
    common_output_directory: "{{ cp4ba_output_directory }}"
    common_db2_hostname: "{{ cp4ba_db2_hostname }}"
    common_db2_password: "{{ cp4ba_db2_universal_password }}"
  with_items:
    - TENANT1
    - TENANT2
  when: db2mc_enabled
